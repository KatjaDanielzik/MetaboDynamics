% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_estimates_dynamics.R
\name{extract_estimates_dynamics}
\alias{extract_estimates_dynamics}
\title{extract_estimates_dynamics}
\usage{
extract_estimates_dynamics(
  data,
  M = length(unique(data$metabolite)),
  t = length(unique(data$time)),
  condition = "dose",
  fits,
  iter = 2000,
  warmup = iter/4,
  chains = 4,
  samples = 100
)
}
\arguments{
\item{data}{dataframe used for modeling}

\item{M}{number of metabolites, default requires a column in data named "metabolite"}

\item{t}{number of unique timepoints in data, the default require a column named "time"}

\item{condition}{name of column in dataframe data that specifies the experimental condition, default requires a column named "dose"}

\item{fits}{lits of model fits for which estimates should be extracted}

\item{iter}{how many iterations were used to fit the dynamic model}

\item{warmup}{how many warm-up iterations were used to fit the dynamic model}

\item{chains}{how many chains were used to fit the dynamic model}

\item{samples}{how many posterior samples should be drawn (p.e. for check of clustering precision)}
}
\value{
a list of dataframes (one per experimental condition) that contains the estimates at the timepoints and samples from the posterior (number as specified in samples)
}
\description{
Extracts the mean concentrations (mu) at every timepoint from the dynamic model fit as well as the 95\% HDI. As well as the estimated standard deviation of metabolite concentrations at every time point (sigma) and the pooled standard deviation of every metabolite over all timepoints (lambda).
Additionally samples from the posterior of mu can be drawn. This can be helpful if p.e. one wants to estimate the clustering precision. Lambda can be used for clustering algorithms such as VSClust that also take the variance into account.
}
\examples{
#' data("intra")
# only run after fit_dynamics_model(data = intra[intra$dose=="0Gy",],
#of function
# extract_estimates(data=intra,fits=fits_dynamics,iter=4000)
}
