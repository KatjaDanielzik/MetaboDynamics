% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ORA_hypergeometric.R
\name{ORA_hypergeometric}
\alias{ORA_hypergeometric}
\title{OverRepresentationAnalysis with a hypergeometric model}
\usage{
ORA_hypergeometric(
  background,
  annotations,
  clusters,
  tested_column = "middle_hierarchy"
)
}
\arguments{
\item{background}{dataframe that contains
KEGG IDs of metabolites that are assigned to functional modules}

\item{annotations}{to which functional modules our experimental metabolites
are assigned}

\item{clusters}{dataframe containing columns "KEGG" specifying the KEGG
identifiers of metabolites, "cluster" specifying the cluster ID of metabolites and a
column specifying the experimental condition called "condition"}

\item{tested_column}{column that is in background and annotations and on
which the hypergeometric model will be executed}

\item{kegg}{columname of "clusters" that specifying the KEGG IDs of metabolites}
}
\value{
a list with a dataframe containing the ORA results and a plot of
the ORA
}
\description{
Testing the hypothesis that certain KEGG modules are over-represented in
clusters of metabolites.
A module is considered over-represented in a cluster the number of
metabolites in a cluster being annotated to a functional module (n_obs)
is higher than the expected number of metabolites in a cluster of this size
being annotated to a functional module (n_theo).
We can calculate the OvE (Observed versus Expected = n_obs/n_theo) and show the
probabilites of these ratios.
log(p(OvE))>0 indicates an over-representation of the functional module in
the cluster, log(p(OvE))<0 an under-representation.
}
\examples{
data("cluster")
head(cluster)
data("modules_compounds")
head(modules_compounds)
data("metabolite_modules")
head(metabolite_modules)
# middly hierachy
ORA <- ORA_hypergeometric(
  background = modules_compounds,
  annotations = metabolite_modules, clusters = cluster,
  tested_column = "middle_hierarchy"
)
ORA[["plot_ORA"]]
# lower hierachy
ORA_lower <- ORA_hypergeometric(
  background = modules_compounds,
  annotations = metabolite_modules, clusters = cluster[cluster$condition == "A", ],
  tested_column = "lower_hierarchy"
)
ORA_lower[["plot_ORA"]]
}
\seealso{
\code{\link[=get_ORA_dataframes]{get_ORA_dataframes()}} function to retrieve "background" and
"annotation" data frames
}
\keyword{annotated}
\keyword{are}
\keyword{experimental}
\keyword{function}
\keyword{helper}
\keyword{internal}
\keyword{metabolites}
\keyword{modules}
\keyword{retrieve}
\keyword{to}
